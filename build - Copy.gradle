/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

plugins
{
   // Apply the java-library plugin to add support for Java Library
	id 'java-library'
}

dependencies
{
	// This dependency is exported to consumers, that is to say found on their compile classpath.
	api 'org.apache.commons:commons-math3:3.6.1'

	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation 'com.google.guava:guava:23.0'

	// Use JUnit test framework
	testImplementation 'junit:junit:4.12'

	// Jersey
	implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.27'
//	implementation 'org.glassfish.jersey.core:jersey-common:2.27'
	implementation 'org.glassfish.jersey.inject:jersey-hk2:2.27'
//	testImplementation 'org.glassfish.jersey.test-framework:jersey-test-framework-util:2.27'
//	testImplementation 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-bundle:2.27'

}

// In this section you declare where to find the dependencies of your project
repositories
{
	// Use jcenter for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
}

task zip(type: Zip, group: "Archive", description: "Archives sources in a zip file") {
	from "src"
	setArchiveName "basic-demo-1.0.zip"
}

task hello {
	doLast
	{
   	println 'Hello world!'
   }
}

hello.doFirst {
	println 'Hello Venus'
}

hello.doLast {
	println 'Hello Mars'
}

hello {
	doLast
	{
		println 'Hello Jupiter'
	}
}

task intro {
	dependsOn hello
	doLast
	{
		println "I'm Gradle"
	}
}

task upper {
	doLast
	{
		String someString = 'mY_nAmE'
		println "Original: $someString"
		println "Upper case: ${someString.toUpperCase()}"
	}
}

task count {
	doLast
	{
		4.times { print "$it " }
	}
}

4.times { counter ->
	task "task$counter" {
   	doLast
		{
			println "I'm task number $counter"
		}
	}
}

task0.dependsOn task2, task3

/*
jar
{
	manifest
	{
		attributes('Implementation-Title': project.name,'Implementation-Version': project.version)
	}
}
*/

jar {
	manifest
	{
   	attributes "Main-Class": "com.efrat.example.devops.echoServerFEApp.EchoServerFEApp"
	}

	from
	{
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

/*
docker {
	name 'hub.docker.com/username/my-app:version'
	tags 'latest' // deprecated, use 'tag'
	tag 'myRegistry', 'my.registry.com/username/my-app:version'
	dockerfile file('Dockerfile')
	files tasks.distTar.outputs, 'file1.txt', 'file2.txt'
	buildArgs([BUILD_VERSION: 'version'])
	labels(['key': 'value'])
	pull true
	noCache true
}

dockerRun {
	name 'my-container'
	image 'busybox'
	volumes 'hostvolume': '/containervolume'
	ports '7080:5000'
	daemonize true
	env 'MYVAR1': 'MYVALUE1', 'MYVAR2': 'MYVALUE2'
	command 'sleep', '100'
}
*/

description = 'A trivial Gradle build'
version = '1.0'
